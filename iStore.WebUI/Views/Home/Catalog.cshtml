@using iStore.WebUI.Models

@model ItemsListViewModel

@{
    ViewBag.Title = "МАГАЗИН";
}

@Html.Partial("_NavigationMenuMobile", "Catalog")

@Html.Partial("_NavigationMenuDesktop", "Catalog")

<div class="row">
    @for (int i = 0; i < Model.Items.Count(); i++)
    {
        var category = Model.Items[i].Category;
        var name = Model.Items[i].Name;
        var price = string.Format("{0}p", Model.Items[i].Price);
        var src = string.Format("/Images/ec_tshirt{0}.jpg", i + 1);

        <div class="col-sm-6 col-md-4 col-lg-3">
            <div class="thumbnail">
                <div class="list-group-item">@category</div>
                <img src="@src">
                <a href="#" class="list-group-item">@name<span class="badge">@price</span></a>
            </div>
        </div>
    }
</div>

@helper Pagination(PagingInfo pagingInfo, Func<int, string> pageUrl)
{
    var prevPage = pagingInfo.CurrentPage - 1 < 1 ? 1 : pagingInfo.CurrentPage - 1;
    var nextPage = pagingInfo.CurrentPage + 1 > pagingInfo.TotalPages ? pagingInfo.TotalPages : pagingInfo.CurrentPage + 1;

    <nav style="display: @(pagingInfo.TotalPages > 0 ? "inline" : "none")">
        <ul class="pagination">
            <li class="@(pagingInfo.CurrentPage == 1 ? "disabled" : "")">
                <a href="@pageUrl(prevPage)" aria-label="Previous">
                    <span aria-hidden="true">&laquo;</span>
                </a>
            </li>

            <li style="display: @(pagingInfo.CurrentPage > 5 ? "inline" : "none")"><a href="@pageUrl(pagingInfo.CurrentPage - 5)">@(pagingInfo.CurrentPage - 5)</a></li>
            <li style="display: @(pagingInfo.CurrentPage > 4 ? "inline" : "none")"><a href="@pageUrl(pagingInfo.CurrentPage - 4)">@(pagingInfo.CurrentPage - 4)</a></li>
            <li style="display: @(pagingInfo.CurrentPage > 3 ? "inline" : "none")"><a href="@pageUrl(pagingInfo.CurrentPage - 3)">@(pagingInfo.CurrentPage - 3)</a></li>
            <li style="display: @(pagingInfo.CurrentPage > 2 ? "inline" : "none")"><a href="@pageUrl(pagingInfo.CurrentPage - 2)">@(pagingInfo.CurrentPage - 2)</a></li>
            <li style="display: @(pagingInfo.CurrentPage > 1 ? "inline" : "none")"><a href="@pageUrl(pagingInfo.CurrentPage - 1)">@(pagingInfo.CurrentPage - 1)</a></li>
            <li class="active"><a href="@pageUrl(pagingInfo.CurrentPage)">@pagingInfo.CurrentPage</a></li>
            <li style="display: @(pagingInfo.TotalPages - pagingInfo.CurrentPage >= 1 ? "inline" : "none")"><a href="@pageUrl(pagingInfo.CurrentPage + 1)">@(pagingInfo.CurrentPage + 1)</a></li>
            <li style="display: @(pagingInfo.TotalPages - pagingInfo.CurrentPage >= 2 ? "inline" : "none")"><a href="@pageUrl(pagingInfo.CurrentPage + 2)">@(pagingInfo.CurrentPage + 2)</a></li>
            <li style="display: @(pagingInfo.TotalPages - pagingInfo.CurrentPage >= 3 ? "inline" : "none")"><a href="@pageUrl(pagingInfo.CurrentPage + 3)">@(pagingInfo.CurrentPage + 3)</a></li>
            <li style="display: @(pagingInfo.TotalPages - pagingInfo.CurrentPage >= 4 ? "inline" : "none")"><a href="@pageUrl(pagingInfo.CurrentPage + 4)">@(pagingInfo.CurrentPage + 4)</a></li>
            <li style="display: @(pagingInfo.TotalPages - pagingInfo.CurrentPage >= 5 ? "inline" : "none")"><a href="@pageUrl(pagingInfo.CurrentPage + 5)">@(pagingInfo.CurrentPage + 5)</a></li>

            <li class="@(pagingInfo.CurrentPage == pagingInfo.TotalPages ? "disabled" : "")">
                <a href="@pageUrl(nextPage)" aria-label="Next">
                    <span aria-hidden="true">&raquo;</span>
                </a>
            </li>
        </ul>
    </nav>
}

@Pagination(Model.PagingInfo, x => Url.Action("Catalog", new { page = x, category = Model.CurrentCategory }))