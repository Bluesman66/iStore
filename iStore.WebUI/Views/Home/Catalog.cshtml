@using iStore.WebUI.Models

@model ItemsListViewModel

@{
    ViewBag.Title = "МАГАЗИН";
}

@Html.Partial("_NavigationMenuMobile", "Catalog")

<div class="container">
    @Html.Partial("_NavigationMenuDesktop", "Catalog")
    
    <div class="row">
        @for (int i = 0; i < Model.Items.Count(); i++)
        {
            var category = Model.Items[i].Category;
            var name = Model.Items[i].Name;
            var price = string.Format("{0}p", Model.Items[i].Price);
            var src = string.Format("/Images/ec_tshirt{0}.jpg", i + 1);
            
            <div class="col-sm-6 col-md-4 col-lg-3">
                <div class="thumbnail">
                    <div class="list-group-item">@category</div>
                    <img src="@src">
                    <a href="#" class="list-group-item">@name<span class="badge">@price</span></a>
                </div>
            </div>
        }
    </div>
    
    @helper PageLinks(PagingInfo pagingInfo, Func<int, string> pageUrl)
    {
        var prevPage = pagingInfo.CurrentPage - 1 < 1 ? 1 : pagingInfo.CurrentPage - 1;
        var nextPage = pagingInfo.CurrentPage + 1 > pagingInfo.TotalPages ? pagingInfo.TotalPages : pagingInfo.CurrentPage + 1;
        
        <nav style="display: @(pagingInfo.TotalPages == 0 ? "none" : "inline-block")">
            <ul class="pagination">
                <li class="@(pagingInfo.CurrentPage == 1 ? "disabled" : "")">
                    <a href="@pageUrl(prevPage)" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>

                @for (int i = 1; i <= pagingInfo.TotalPages; i++)
                {
                    <li class="@(i == pagingInfo.CurrentPage ? "active" : "")"><a href="@pageUrl(i)">@i</a></li>
                }
                
                <li class="@(pagingInfo.CurrentPage == pagingInfo.TotalPages ? "disabled" : "")">
                    <a href="@pageUrl(nextPage)" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
    }

    @PageLinks(Model.PagingInfo, x => Url.Action("Catalog", new { page = x, category = Model.CurrentCategory }))

</div>